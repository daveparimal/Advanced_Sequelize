1) Install sequelize
npm init -y # to create node project with package.json
npm install --save sequelize
npm install --save express
npm install --save-dev nodemon
npm install --save pg pg-hstore # Postgres connectors installation

2) Install sequalize-cli 
Commnd line tool. Helps create models and stuff
npm install -g --save-dev sequelize-cli

3) Create basic folder structure for backend with below command
sequelize init

4) Understanding folder structure
/config/config.json --> Json containing username, password, database name, database type like mysql, postgres, etc.
/models/index.js
Helps connect to database and provides and object to communicate

5) Useful commands for sequelize
To create database:
sequelize db:create 
This will create database with the details available in config.json

To create model:
E.g.:
sequelize model:generate --name User --attributes name:string,email:string,role:string
sequelize model:generate --name <table_name> --attributes <column_name>:<column_type>,<column_name>:<column_type>, ....

To delete database:
sequalize db:drop

To start migrations
sequelize db:migrate
This command will create a table in database called SequelizeMeta which keeps tracks of your migrations

To see status of migrations
sequelize db:migrate:status

To revert previous migration. One migration only.
sequelize db:migrate:undo

To revert all previous migrations. 
sequelize db:migrate:undo:all

6) Start server
nodemon app.js

7) To remove/rename created at updated at in sequelize
class Foo extends Model {}
Foo.init({ /* attributes */ }, {
  sequelize,

  // don't forget to enable timestamps!
  timestamps: true,

  // I don't want createdAt
  createdAt: false,

  // I want updatedAt to actually be called updateTimestamp
  updatedAt: 'updateTimestamp'
});

8) To add hardcoded data into the table, this could be added in the app.js reqeusts code. 

const data = await Users.build({name:"parimal dave", email:"test@gmail.com", gender:"male"});
await data.save()

If we want to build and save data in one go we user
const data = await Users.create({name:"parimal dave", email:"test@gmail.com", gender:"male"});

If we want to update the name
data.name = "dummy" // data is the instance from the one creted above
data.save() // the row would be updated

If we want to delete the same
data.destroy() 

// Truncate / empty the table 
const data = Users.destroy({truncate: true});



